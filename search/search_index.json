{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"IBM Maximo Application Suite CLI Utility \uf0c1 There are various dependencies to meet on your own computer to use the CLI, depending on which functions you are using: Bash (v4) OpenShift client IBMCloud client with container plugin enabled Ansible Python Network access to the OpenShift cluster The best way to use the CLI is via the container image: docker run -ti -v ~:/home/local quay.io/ibmmas/cli:1.0.0 . The install is designed to work on any OCP cluster, but has been specifically tested in these environments: IBMCloud ROKS Microsoft Azure IBM DevIT FYRE (internal) All settings can be controlled via environment variables to avoid needing to manually type them out, for example if you export IBM_ENTITLEMENT_KEY=xxxx then when you run the install that input will be prefilled with the value from the environment variable, allowing you to press Enter to continue, or modify the value if you need to. The engine that performs all tasks is written in Ansible, you can directly use the same automation outside of this CLI if you wish. The code is open source and available in ibm-mas/ansible-devops and ibm-mas/ansible-airgap , the collections are also available to install directly from Ansible Galaxy: Ansible Galaxy: ibm.mas_devops Ansible Galaxy: ibm.mas_airgap","title":"Home"},{"location":"#ibm-maximo-application-suite-cli-utility","text":"There are various dependencies to meet on your own computer to use the CLI, depending on which functions you are using: Bash (v4) OpenShift client IBMCloud client with container plugin enabled Ansible Python Network access to the OpenShift cluster The best way to use the CLI is via the container image: docker run -ti -v ~:/home/local quay.io/ibmmas/cli:1.0.0 . The install is designed to work on any OCP cluster, but has been specifically tested in these environments: IBMCloud ROKS Microsoft Azure IBM DevIT FYRE (internal) All settings can be controlled via environment variables to avoid needing to manually type them out, for example if you export IBM_ENTITLEMENT_KEY=xxxx then when you run the install that input will be prefilled with the value from the environment variable, allowing you to press Enter to continue, or modify the value if you need to. The engine that performs all tasks is written in Ansible, you can directly use the same automation outside of this CLI if you wish. The code is open source and available in ibm-mas/ansible-devops and ibm-mas/ansible-airgap , the collections are also available to install directly from Ansible Galaxy: Ansible Galaxy: ibm.mas_devops Ansible Galaxy: ibm.mas_airgap","title":"IBM Maximo Application Suite CLI Utility"},{"location":"changes/","text":"Changes \uf0c1 1.0 Initial release ( #30 )","title":"Changes"},{"location":"changes/#changes","text":"1.0 Initial release ( #30 )","title":"Changes"},{"location":"commands/configure-airgap/","text":"Configure Airgap \uf0c1 Important The configure-airgap command does not work for IBMCloud ROKS clusters. This is a limitation of the service provided in IBMCloud which disables key parts of OpenShift functionality required to configure and use ImageContentSourcePolicy resources (which is the basis of airgap/image mirroring support in OpenShift). Usage \uf0c1 docker run -ti -v ~:/home/local quay.io/ibmmas/cli:1.0.0 mas configure-airgap Air Gap Environments \uf0c1 Three commands are available to aid in the deployment of an Air Gap MAS installation. Stage 1: Prepare your mirror registry \uf0c1 mas setup-registry will deploy a private docker registry on an OCP cluster suitable for hosting a mirror of all container images used in a MAS installation mas mirror-images will mirror all (or a subset) container images needed for a MAS installation to your private registry Stage 2: Configure the target cluster to use the mirror registry \uf0c1 mas configure-airgap will configure your target OCP cluster to use a private docker register and will install the operator catalogs required by MAS from that mirror","title":"configure-airgap"},{"location":"commands/configure-airgap/#configure-airgap","text":"Important The configure-airgap command does not work for IBMCloud ROKS clusters. This is a limitation of the service provided in IBMCloud which disables key parts of OpenShift functionality required to configure and use ImageContentSourcePolicy resources (which is the basis of airgap/image mirroring support in OpenShift).","title":"Configure Airgap"},{"location":"commands/configure-airgap/#usage","text":"docker run -ti -v ~:/home/local quay.io/ibmmas/cli:1.0.0 mas configure-airgap","title":"Usage"},{"location":"commands/configure-airgap/#air-gap-environments","text":"Three commands are available to aid in the deployment of an Air Gap MAS installation.","title":"Air Gap Environments"},{"location":"commands/configure-airgap/#stage-1-prepare-your-mirror-registry","text":"mas setup-registry will deploy a private docker registry on an OCP cluster suitable for hosting a mirror of all container images used in a MAS installation mas mirror-images will mirror all (or a subset) container images needed for a MAS installation to your private registry","title":"Stage 1: Prepare your mirror registry"},{"location":"commands/configure-airgap/#stage-2-configure-the-target-cluster-to-use-the-mirror-registry","text":"mas configure-airgap will configure your target OCP cluster to use a private docker register and will install the operator catalogs required by MAS from that mirror","title":"Stage 2: Configure the target cluster to use the mirror registry"},{"location":"commands/install/","text":"Install \uf0c1 Details \uf0c1 The install is performed inside your RedHat OpenShift cluster utilizing Openshift Pipelines OpenShift Pipelines is a Kubernetes-native CI/CD solution based on Tekton. It builds on Tekton to provide a CI/CD experience through tight integration with OpenShift and Red Hat developer tools. OpenShift Pipelines is designed to run each step of the CI/CD pipeline in its own container, allowing each step to scale independently to meet the demands of the pipeline. The installer supports: IBM operator catalog configuration Required dependency installation: MongoDb IBM Suite License Service IBM User Data Services IBM Certificate Manager Red Hat Service Binding Operator Optional dependency installation: Apache Kafka IBM Db2 IBM Cloud Pak for Data Watson Discovery Watson Studio Watson Machine Learning Watson OpenScale Analytics Engine (Apache Spark) Suite core services installation Suite application installation The installer will automatically provision and set up the required dependencies based on the applications that you select to install. The install can be launched with the command mas install . The end result will be a pipeline run being started in your target cluster where you can track the progress of the installation. Pre-reqs \uf0c1 1. IBM Entitlement key \uf0c1 Access Container Software Library using your IBMId to access your entitlement key 2. MAS License File \uf0c1 Access IBM License Key Center , on the Get Keys menu select IBM AppPoint Suites . Select IBM MAXIMO APPLICATION SUITE AppPOINT LIC and on the next page fill in the information as below: Field Content Number of Keys How many AppPoints to assign to the license file Host ID Type Set to Ethernet Address Host ID Enter any 12 digit hexadecimal string Hostname Set to the hostname of your OCP instance Port Set to 27000 The other values can be left at their defaults. Finally, click Generate and download the license file to your home directory as entitlement.lic . Usage \uf0c1 Important We will need the entitlement.lic file to perform the installation which is why we mount your home directory into the container. If you saved the entitlement file elsewhere, mount that directory instead. When prompted you will be able to set license file to /home/local/entitlement.lic docker run -ti -v ~:/home/local quay.io/ibmmas/cli:1.0.0 mas install Mustgather \uf0c1 The pipeline sets a \"finally\" block that is executed at the end of the steps regardless of success or failure. Inside this finally block the mustgather Task is executed which runs the IBM AI Applications' Must Gather tool against a MAS instance. It uses the mustgather workspace to persist the output into a Persistent Volume for retrieval after the pipeline has completed. Users can then use the ibm.mas_devops.suite_mustgather_download playbook locally to pull the mustgather output from the persistent volume. Note The mustgather Task will clear any previous content found in the /workspace/mustgather persistent volume before each call to the mustgather playbook. This is to ensure that the persistent volume does not become full after multiple runs using the same persistent volume/namespace.","title":"install"},{"location":"commands/install/#install","text":"","title":"Install"},{"location":"commands/install/#details","text":"The install is performed inside your RedHat OpenShift cluster utilizing Openshift Pipelines OpenShift Pipelines is a Kubernetes-native CI/CD solution based on Tekton. It builds on Tekton to provide a CI/CD experience through tight integration with OpenShift and Red Hat developer tools. OpenShift Pipelines is designed to run each step of the CI/CD pipeline in its own container, allowing each step to scale independently to meet the demands of the pipeline. The installer supports: IBM operator catalog configuration Required dependency installation: MongoDb IBM Suite License Service IBM User Data Services IBM Certificate Manager Red Hat Service Binding Operator Optional dependency installation: Apache Kafka IBM Db2 IBM Cloud Pak for Data Watson Discovery Watson Studio Watson Machine Learning Watson OpenScale Analytics Engine (Apache Spark) Suite core services installation Suite application installation The installer will automatically provision and set up the required dependencies based on the applications that you select to install. The install can be launched with the command mas install . The end result will be a pipeline run being started in your target cluster where you can track the progress of the installation.","title":"Details"},{"location":"commands/install/#pre-reqs","text":"","title":"Pre-reqs"},{"location":"commands/install/#1-ibm-entitlement-key","text":"Access Container Software Library using your IBMId to access your entitlement key","title":"1. IBM Entitlement key"},{"location":"commands/install/#2-mas-license-file","text":"Access IBM License Key Center , on the Get Keys menu select IBM AppPoint Suites . Select IBM MAXIMO APPLICATION SUITE AppPOINT LIC and on the next page fill in the information as below: Field Content Number of Keys How many AppPoints to assign to the license file Host ID Type Set to Ethernet Address Host ID Enter any 12 digit hexadecimal string Hostname Set to the hostname of your OCP instance Port Set to 27000 The other values can be left at their defaults. Finally, click Generate and download the license file to your home directory as entitlement.lic .","title":"2. MAS License File"},{"location":"commands/install/#usage","text":"Important We will need the entitlement.lic file to perform the installation which is why we mount your home directory into the container. If you saved the entitlement file elsewhere, mount that directory instead. When prompted you will be able to set license file to /home/local/entitlement.lic docker run -ti -v ~:/home/local quay.io/ibmmas/cli:1.0.0 mas install","title":"Usage"},{"location":"commands/install/#mustgather","text":"The pipeline sets a \"finally\" block that is executed at the end of the steps regardless of success or failure. Inside this finally block the mustgather Task is executed which runs the IBM AI Applications' Must Gather tool against a MAS instance. It uses the mustgather workspace to persist the output into a Persistent Volume for retrieval after the pipeline has completed. Users can then use the ibm.mas_devops.suite_mustgather_download playbook locally to pull the mustgather output from the persistent volume. Note The mustgather Task will clear any previous content found in the /workspace/mustgather persistent volume before each call to the mustgather playbook. This is to ensure that the persistent volume does not become full after multiple runs using the same persistent volume/namespace.","title":"Mustgather"},{"location":"commands/mirror-images/","text":"Mirror Images \uf0c1 Usage \uf0c1 docker run -ti quay.io/ibmmas/cli:1.0.0 mas mirror-images Air Gap Environments \uf0c1 Three commands are available to aid in the deployment of an Air Gap MAS installation. Stage 1: Prepare your mirror registry \uf0c1 mas setup-registry will deploy a private docker registry on an OCP cluster suitable for hosting a mirror of all container images used in a MAS installation mas mirror-images will mirror all (or a subset) container images needed for a MAS installation to your private registry Stage 2: Configure the target cluster to use the mirror registry \uf0c1 mas configure-airgap will configure your target OCP cluster to use a private docker register and will install the operator catalogs required by MAS from that mirror","title":"mirror-images"},{"location":"commands/mirror-images/#mirror-images","text":"","title":"Mirror Images"},{"location":"commands/mirror-images/#usage","text":"docker run -ti quay.io/ibmmas/cli:1.0.0 mas mirror-images","title":"Usage"},{"location":"commands/mirror-images/#air-gap-environments","text":"Three commands are available to aid in the deployment of an Air Gap MAS installation.","title":"Air Gap Environments"},{"location":"commands/mirror-images/#stage-1-prepare-your-mirror-registry","text":"mas setup-registry will deploy a private docker registry on an OCP cluster suitable for hosting a mirror of all container images used in a MAS installation mas mirror-images will mirror all (or a subset) container images needed for a MAS installation to your private registry","title":"Stage 1: Prepare your mirror registry"},{"location":"commands/mirror-images/#stage-2-configure-the-target-cluster-to-use-the-mirror-registry","text":"mas configure-airgap will configure your target OCP cluster to use a private docker register and will install the operator catalogs required by MAS from that mirror","title":"Stage 2: Configure the target cluster to use the mirror registry"},{"location":"commands/provision-fyre/","text":"Provision OCP on FYRE \uf0c1 Usage \uf0c1 docker run -ti quay.io/ibmmas/cli:1.0.0 mas provision-fyre","title":"provision-fyre"},{"location":"commands/provision-fyre/#provision-ocp-on-fyre","text":"","title":"Provision OCP on FYRE"},{"location":"commands/provision-fyre/#usage","text":"docker run -ti quay.io/ibmmas/cli:1.0.0 mas provision-fyre","title":"Usage"},{"location":"commands/provision-roks/","text":"Provision OCP on IBMCloud ROKS \uf0c1 Usage \uf0c1 docker run -ti quay.io/ibmmas/cli:1.0.0 mas provision-roks","title":"provision-roks"},{"location":"commands/provision-roks/#provision-ocp-on-ibmcloud-roks","text":"","title":"Provision OCP on IBMCloud ROKS"},{"location":"commands/provision-roks/#usage","text":"docker run -ti quay.io/ibmmas/cli:1.0.0 mas provision-roks","title":"Usage"},{"location":"commands/provision-rosa/","text":"Provision OCP on AWS ROSA \uf0c1 Usage \uf0c1 docker run -ti quay.io/ibmmas/cli:1.0.0 mas provision-rosa","title":"provision-rosa"},{"location":"commands/provision-rosa/#provision-ocp-on-aws-rosa","text":"","title":"Provision OCP on AWS ROSA"},{"location":"commands/provision-rosa/#usage","text":"docker run -ti quay.io/ibmmas/cli:1.0.0 mas provision-rosa","title":"Usage"},{"location":"commands/setup-registry/","text":"Setup Private Registry \uf0c1 Usage \uf0c1 docker run -ti quay.io/ibmmas/cli:1.0.0 mas setup-registry Air Gap Environments \uf0c1 Three commands are available to aid in the deployment of an Air Gap MAS installation. Stage 1: Prepare your mirror registry \uf0c1 mas setup-registry will deploy a private docker registry on an OCP cluster suitable for hosting a mirror of all container images used in a MAS installation mas mirror-images will mirror all (or a subset) container images needed for a MAS installation to your private registry Stage 2: Configure the target cluster to use the mirror registry \uf0c1 mas configure-airgap will configure your target OCP cluster to use a private docker register and will install the operator catalogs required by MAS from that mirror","title":"setup-registry"},{"location":"commands/setup-registry/#setup-private-registry","text":"","title":"Setup Private Registry"},{"location":"commands/setup-registry/#usage","text":"docker run -ti quay.io/ibmmas/cli:1.0.0 mas setup-registry","title":"Usage"},{"location":"commands/setup-registry/#air-gap-environments","text":"Three commands are available to aid in the deployment of an Air Gap MAS installation.","title":"Air Gap Environments"},{"location":"commands/setup-registry/#stage-1-prepare-your-mirror-registry","text":"mas setup-registry will deploy a private docker registry on an OCP cluster suitable for hosting a mirror of all container images used in a MAS installation mas mirror-images will mirror all (or a subset) container images needed for a MAS installation to your private registry","title":"Stage 1: Prepare your mirror registry"},{"location":"commands/setup-registry/#stage-2-configure-the-target-cluster-to-use-the-mirror-registry","text":"mas configure-airgap will configure your target OCP cluster to use a private docker register and will install the operator catalogs required by MAS from that mirror","title":"Stage 2: Configure the target cluster to use the mirror registry"}]}