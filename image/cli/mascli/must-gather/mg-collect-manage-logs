#!/bin/bash
set -e

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
. $DIR/../functions/internal/utils

NAMESPACE=$1
OUTPUT_DIR=$2

createFolder () {
  INSTANCE_ID=$(echo ${NAMESPACE%-*})
  INSTANCE_ID=$(echo ${INSTANCE_ID#*-})
  APP=$(echo ${POD%-*}) #removing 2nd ID
  APP=$(echo ${APP%-*}) #removing 1st ID
     if [[ "$APP" == "$INSTANCE_ID" ]]; then
       APP=$(echo ${POD%-*}) #removing 2nd ID
     fi
  mkdir -p "$OUTPUT_DIR/resources/$NAMESPACE/pods_files/$APP/files"
}

# Getting route_manager.log from EntityMgr-WS Pod 
# ==================================================
echo "- ${COLOR_BLUE} Getting route_manager.log from EntityMgr-WS Pod ${TEXT_RESET}"
NAMESPACE=$1
POD_NAME=$(oc -n $NAMESPACE get pods -l "mas.ibm.com/appType= entitymgr-ws-operator" -o jsonpath="{.items[*].metadata.name}")
if [[ "$POD_NAME" != "" ]]; then
  FILE=$(oc describe $NAMESPACE/$POD:/tmp/route_manager.log)
  # FILE=$(oc cp $NAMESPACE/$POD:/tmp/route_manager.log $OUTPUT_DIR/resources/$NAMESPACE/pods_files/$APP/files/route_manager.log)
  if [[ -f "$FILE" ]]; then	
  # if [[ -s "$FILE" ]]; then
    createFolder
    oc cp $NAMESPACE/$POD:/tmp/route_manager.log $OUTPUT_DIR/resources/$NAMESPACE/pods_files/$APP/files/route_manager.log --retries 50
  else
    echo_warning "$FILE does not exist."
  fi
else
  echo_warning "EntityMgr-WS pod was not found"
fi

# Getting Maxinst Pod Files
# =========================
echo "- ${COLOR_BLUE} Getting Maxinst Pod Files${TEXT_RESET}"
POD=$(oc -n $NAMESPACE get pods -l "mas.ibm.com/appType= maxinstudb" -o jsonpath="{.items[*].metadata.name}")

if [[ "$POD" != "" ]]; then
  createFolder 
  oc cp $NAMESPACE/$POD:log $OUTPUT_DIR/resources/$NAMESPACE/pods_files/$APP/files --retries 50
else
  echo_warning "Maxinst pod was not found"
fi

# Getting db2u Pod Files
# =========================
echo "- ${COLOR_BLUE} Getting db2u Pod Files${TEXT_RESET}"
#  NAMESPACE_LOOKUP=$(oc get namespace db2u --ignore-not-found)
 NAMESPACE=$(oc get namespace db2u -o jsonpath='{.metadata.name}' --ignore-not-found)
  if [[ "$NAMESPACE" != "" ]]; then
    POD_NAME=$(oc -n $NAMESPACE get pods -l "type=engine" -o jsonpath="{.items[*].metadata.name}")
    if [[ "$POD_NAME" != "" ]]; then
      for POD in ${POD_NAME[@]}; do
        createFolder
        oc cp $NAMESPACE/$POD:tmp $OUTPUT_DIR/resources/$NAMESPACE/pods_files/$APP/files --retries 50
      done
    else
      echo_warning "DB2U pod was not found"
    fi
  else
    echo_highlight "Unable to find db2u namespace"
  fi

# Getting Server Bundle Pod Files
# =========================
echo "- ${COLOR_BLUE} Getting Server Bundle Pod Files${TEXT_RESET}"
NAMESPACE=$1
POD_NAME=$(oc -n $NAMESPACE get pods -l "mas.ibm.com/appType= serverBundle" -o jsonpath="{.items[*].metadata.name}")
if [[ "$POD_NAME" != "" ]]; then
  for POD in ${POD_NAME[@]}; do
    createFolder
    oc cp $NAMESPACE/$POD:logs $OUTPUT_DIR/resources/$NAMESPACE/pods_files/$APP/files --retries 50
  done
else
  echo_warning "Server Bundle pod was not found"
fi

exit 0